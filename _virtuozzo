#compdef prlctl
#
# Virtuozzo 7 prlctl zsh completion
# Based on https://docs.virtuozzo.com/master/index.html

local -a _1st_arguments
_1st_arguments=(
  'backup'
  'backup-list'
  'backup-delete'
  'restore'
  'capture'
  'clone'
  'console'
  'create'
  'delete'
  'installtools'
  'enter'
  'exec'
  'list'
  'migrate'
  'pause'
  'register'
  'reset'
  'resume'
  'restart'
  'start'
  'status'
  'change-sid'
  'stop'
  'snapshot'
  'snapshot-delete'
  'snapshot-list'
  'snapshot-switch'
  'suspend'
  'unregister'
  'reset-uptime'
  'mount'
  'umount'
  'move'
  'problem-report'
  'statistics'
  'set'
)

_guests() {
  while read -r guest
  do
    _wanted 'guest' expl 'guest' compadd $guest
  done <<< "$( prlctl list --all --no-header -o name 2>/dev/null )"
}

_arguments '*:: :->subcmds' && return 0

if (( CURRENT == 1 )); then
  _describe -t commands "prctl commands" _1st_arguments -V1
  return
fi

case "$words[1]" in
  list)
    _arguments \
      {-a,--all}'[List all, running, stopped, suspended, and paused virtual machines]' \
      {-t,--template}'[List the available virtual machine templates]' \
      '--no-header[Do not display column headers]' \
      {-o,--output}'[Specify field(s) to output]:type:(uuid envid status name dist owner system-flags description numproc ip ip_configured hostname netif mac features location iolimit netdev type ha_enable ha_prio)' \
      {-s,--sort}'[Sort output in ascending order by specified field]:type:(uuid envid status name dist owner system-flags description numproc ip ip_configured hostname netif mac features location iolimit netdev type ha_enable ha_prio)' \
      {-i,--info}'[Display detailed information about a virtual machine]' \
      '-L[List fields which can be used for both the output (-o, --output) and sort order (-s, --sort) options.]' \
      '--vmtype[Display only virtual environments of the specified type.:type:(ct vm all)]' \
      {-j,--json}'[Produce output in the JSON format.]' \
      {-f,--full}'[Display additional information about virtual environments..]'
  ;;

#  backup )
#    _arguments \
#      :guest:_guests
#  ;;

#  backup-list )
#    _arguments \
#      :guest:_guests
#  ;;

#  backup-delete )
#    _arguments \
#      :guest:_guests
#  ;;

#  restore )
#    _arguments \
#      :guest:_guests
#  ;;

  capture )
    _arguments \
      :guest:_guests \
      '--file[Path where to save the screenshot to]'
  ;;

#  clone )
#    _arguments \
#      :guest:_guests
#  ;;

  console )
    _arguments \
      :guest:_guests
  ;;

#  create )
#    _arguments \
#      :guest:_guests
#  ;;

  delete )
    _arguments \
      :guest:_guests \
      '--force'
  ;;

  installtools )
    _arguments \
      :guest:_guests
  ;;

  enter )
    _arguments \
      :guest:_guests
  ;;

#  exec )
#    _arguments \
#      :guest:_guests
#  ;;

#  migrate )
#    _arguments \
#      :guest:_guests
#  ;;

  pause )
    _arguments \
      :guest:_guests
  ;;

#  register )
#    _arguments \
#      :guest:_guests
#  ;;

  reset )
    _arguments \
      :guest:_guests
  ;;

  resume )
    _arguments \
      :guest:_guests
  ;;

  restart )
    _arguments \
      :guest:_guests
  ;;

  start )
    _arguments \
      :guest:_guests
  ;;

#  status )
#    _arguments \
#      :guest:_guests
#  ;;

#  change-sid )
#    _arguments \
#      :guest:_guests
#  ;;

  stop )
    _arguments \
      :guest:_guests \
      '--kill' \
      '--noforce'
  ;;

  snapshot )
    _arguments \
      :guest:_guests \
      {-n,--name}'[name of the snapshot]'
  ;;

#  snapshot-delete )
#    _arguments \
#      :guest:_guests
#  ;;

#  snapshot-list )
#    _arguments \
#      :guest:_guests
#  ;;

#  snapshot-switch )
#    _arguments \
#      :guest:_guests
#  ;;

  suspend )
    _arguments \
      :guest:_guests
  ;;

  unregister )
    _arguments \
      :guest:_guests
  ;;

  reset-uptime )
    _arguments \
      :guest:_guests
  ;;

#  mount )
#    _arguments \
#      :guest:_guests
#  ;;

  umount )
    _arguments \
      :guest:_guests
  ;;

#  move )
#    _arguments \
#      :guest:_guests
#  ;;

#  problem-report )
#    _arguments \
#      :guest:_guests
#  ;;

#  statistics )
#    _arguments \
#      :guest:_guests
#  ;;

#  set )
#    _arguments \
#      :guest:_guests
#  ;;
esac
